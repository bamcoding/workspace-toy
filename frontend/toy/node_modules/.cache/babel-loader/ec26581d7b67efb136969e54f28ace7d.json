{"ast":null,"code":"var _jsxFileName = \"/Users/edward/Documents/bamcoding/toy/frontend/toy/src/components/Todo/Todo.jsx\";\nimport React from 'react';\nimport { Checkbox, IconButton, InputBase, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\nimport { DeleteOutlined } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Todo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkboxEventHandler = e => {\n      const thisItem = this.state.item;\n      thisItem.done = !thisItem.done;\n      this.setState({\n        item: thisItem\n      });\n      this.update(this.state.item);\n    };\n\n    this.offReadOnlyMode = () => {\n      console.log(\"Event!\", this.state.readOnly);\n      this.setState({\n        readOnly: false\n      }, () => {\n        console.log(\"ReadOnly? \", this.state.readOnly);\n      });\n    };\n\n    this.editEventHandler = e => {\n      const thisItem = this.state.item;\n      thisItem.title = e.target.value;\n      this.setState({\n        item: thisItem\n      });\n    };\n\n    this.deleteEventHandler = () => {\n      let seq = this.state.item.seq;\n      console.log(seq);\n      this.delete(this.state.item);\n    };\n\n    this.state = {\n      item: props.item,\n      readOnly: true\n    };\n    this.delete = props.delete;\n    this.update = props.update;\n  }\n\n  render() {\n    const item = this.state.item;\n    return /*#__PURE__*/_jsxDEV(ListItem, {\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: item.done,\n        disableRipple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        children: /*#__PURE__*/_jsxDEV(InputBase, {\n          inputProps: {\n            \"aria-label\": \"naked\",\n            readOnly: this.state.readOnly\n          },\n          type: \"text\",\n          id: item.seq.toString(),\n          name: item.seq.toString(),\n          value: item.seq + \" / \" + item.title + \" / \" + item.content,\n          multiline: true,\n          fullWidth: true,\n          onClick: this.offReadOnlyMode,\n          onChange: this.editEventHandler,\n          onKeyPress: this.enterKeyEventHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Delete Todo\",\n          onClick: this.deleteEventHandler,\n          children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["/Users/edward/Documents/bamcoding/toy/frontend/toy/src/components/Todo/Todo.jsx"],"names":["React","Checkbox","IconButton","InputBase","ListItem","ListItemSecondaryAction","ListItemText","DeleteOutlined","Todo","Component","constructor","props","checkboxEventHandler","e","thisItem","state","item","done","setState","update","offReadOnlyMode","console","log","readOnly","editEventHandler","title","target","value","deleteEventHandler","seq","delete","render","toString","content","enterKeyEventHandler"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Checkbox, IconButton, InputBase, ListItem, ListItemSecondaryAction, ListItemText} from \"@material-ui/core\";\nimport {DeleteOutlined} from \"@material-ui/icons\";\n\nclass Todo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { item: props.item, readOnly: true };\n        this.delete = props.delete;\n        this.update = props.update;\n    }\n\n    checkboxEventHandler = (e) => {\n        const thisItem = this.state.item;\n        thisItem.done = !thisItem.done;\n        this.setState({item: thisItem});\n        this.update(this.state.item);\n    };\n\n    offReadOnlyMode = () => {\n        console.log(\"Event!\", this.state.readOnly)\n        this.setState({ readOnly: false }, () => {\n            console.log(\"ReadOnly? \", this.state.readOnly)\n        });\n    }\n\n    editEventHandler = (e) => {\n        const thisItem = this.state.item;\n        thisItem.title = e.target.value;\n        this.setState({ item : thisItem });\n    }\n\n    deleteEventHandler = () => {\n        let seq = this.state.item.seq;\n        console.log(seq);\n        this.delete(this.state.item);\n    }\n\n    render() {\n        const item = this.state.item;\n        return (\n            <ListItem>\n                <Checkbox checked={item.done} disableRipple />\n                <ListItemText>\n                    <InputBase\n                        inputProps={{\n                            \"aria-label\":\"naked\",\n                            readOnly: this.state.readOnly,\n                        }}\n                        type=\"text\"\n                        id={item.seq.toString()}\n                        name={item.seq.toString()}\n                        value={item.seq+\" / \"+item.title+\" / \"+item.content}\n                        multiline={true}\n                        fullWidth={true}\n                        onClick={this.offReadOnlyMode}\n                        onChange={this.editEventHandler}\n                        onKeyPress={this.enterKeyEventHandler}\n                    />\n                </ListItemText>\n                <ListItemSecondaryAction>\n                    <IconButton\n                        aria-label=\"Delete Todo\"\n                        onClick={this.deleteEventHandler}\n                    >\n                        <DeleteOutlined />\n                    </IconButton>\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}